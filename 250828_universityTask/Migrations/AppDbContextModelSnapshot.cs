// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _250828_universityTask.Data;

#nullable disable

namespace _250828_universityTask.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_250828_universityTask.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UniversityId");

                    b.ToTable("Professors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Klaus Mikaelson",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tim McGraw",
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sophia Goldberg",
                            UniversityId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Clara Bow",
                            UniversityId = 2
                        });
                });

            modelBuilder.Entity("_250828_universityTask.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfessorAddedId")
                        .HasColumnType("int");

                    b.Property<int?>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorAddedId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Addison Montgomery",
                            ProfessorAddedId = 4,
                            UniversityId = 2
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hanna Marin",
                            ProfessorAddedId = 2,
                            UniversityId = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mark Sloan",
                            ProfessorAddedId = 1,
                            UniversityId = 1
                        });
                });

            modelBuilder.Entity("_250828_universityTask.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Cambridge",
                            Country = "USA",
                            Name = "Massachusetts Institute of Technology (MIT)"
                        },
                        new
                        {
                            Id = 2,
                            City = "Stanford",
                            Country = "USA",
                            Name = "Stanford University"
                        },
                        new
                        {
                            Id = 3,
                            City = "London",
                            Country = "UK",
                            Name = "Imperial College London"
                        });
                });

            modelBuilder.Entity("_250828_universityTask.Models.Professor", b =>
                {
                    b.HasOne("_250828_universityTask.Models.University", "University")
                        .WithMany("Professors")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("University");
                });

            modelBuilder.Entity("_250828_universityTask.Models.Student", b =>
                {
                    b.HasOne("_250828_universityTask.Models.Professor", "ProfessorAdded")
                        .WithMany("AddedStudents")
                        .HasForeignKey("ProfessorAddedId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("_250828_universityTask.Models.University", "University")
                        .WithMany("Students")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ProfessorAdded");

                    b.Navigation("University");
                });

            modelBuilder.Entity("_250828_universityTask.Models.Professor", b =>
                {
                    b.Navigation("AddedStudents");
                });

            modelBuilder.Entity("_250828_universityTask.Models.University", b =>
                {
                    b.Navigation("Professors");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
